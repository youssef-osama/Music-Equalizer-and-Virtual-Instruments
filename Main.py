# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'TASK3TEST4.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from ast import Break
import wave
from matplotlib.axis import YAxis
from scipy import signal
from ctypes import cast, POINTER
from comtypes import CLSCTX_ALL
from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume
from fileinput import filename
from msilib.schema import RadioButton
from PyQt5 import QtCore, QtGui, QtWidgets
import pysynth_s as guitar
import pysynth_e as epiano
import pysynth_b as grandpiano
import pysynth as toypiano
import scipy 
import soundfile as sf
import sounddevice as sd
import os
import simpleaudio as sa
import time
from PyQt5.QtWidgets import QFileDialog
#import pyaudio
import numpy as np
import atexit
from sympy import false
import pyqtgraph

def exit_handler():
        os.remove(r'CurrentNote.wav')
atexit.register(exit_handler)


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.timer=QtCore.QTimer()
        
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(984, 591)
        MainWindow.setStyleSheet("/*Copyright (c) DevSec Studio. All rights reserved.\n"
"\n"
"MIT License\n"
"\n"
"Permission is hereby granted, free of charge, to any person obtaining a copy\n"
"of this software and associated documentation files (the \"Software\"), to deal\n"
"in the Software without restriction, including without limitation the rights\n"
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n"
"copies of the Software, and to permit persons to whom the Software is\n"
"furnished to do so, subject to the following conditions:\n"
"\n"
"The above copyright notice and this permission notice shall be included in all\n"
"copies or substantial portions of the Software.\n"
"\n"
"THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n"
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n"
"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n"
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n"
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n"
"OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
"*/\n"
"\n"
"/*-----QWidget-----*/\n"
"QWidget\n"
"{\n"
"    background-color: #3a3a3a;\n"
"    color: #fff;\n"
"    selection-background-color: #b78620;\n"
"    selection-color: #000;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QLabel-----*/\n"
"QLabel\n"
"{\n"
"    background-color: transparent;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QMenuBar-----*/\n"
"QMenuBar \n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(57, 57, 57, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    border: 1px solid #000;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenuBar::item \n"
"{\n"
"    background-color: transparent;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenuBar::item:selected \n"
"{\n"
"    background-color: rgba(183, 134, 32, 20%);\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenuBar::item:pressed \n"
"{\n"
"    background-color: rgb(183, 134, 32);\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QMenu-----*/\n"
"QMenu\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(57, 57, 57, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    border: 1px solid #222;\n"
"    padding: 4px;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenu::item\n"
"{\n"
"    background-color: transparent;\n"
"    padding: 2px 20px 2px 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenu::separator\n"
"{\n"
"       background-color: rgb(183, 134, 32);\n"
"    height: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenu::item:disabled\n"
"{\n"
"    color: #555;\n"
"    background-color: transparent;\n"
"    padding: 2px 20px 2px 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenu::item:selected\n"
"{\n"
"    background-color: rgba(183, 134, 32, 20%);\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QToolBar-----*/\n"
"QToolBar\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(69, 69, 69, 255),stop:1 rgba(58, 58, 58, 255));\n"
"    border-top: none;\n"
"    border-bottom: 1px solid #4f4f4f;\n"
"    border-left: 1px solid #4f4f4f;\n"
"    border-right: 1px solid #4f4f4f;\n"
"\n"
"}\n"
"\n"
"\n"
"QToolBar::separator\n"
"{\n"
"    background-color: #2e2e2e;\n"
"    width: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QToolButton-----*/\n"
"QToolButton \n"
"{\n"
"    background-color: transparent;\n"
"    color: #fff;\n"
"    padding: 5px;\n"
"    padding-left: 8px;\n"
"    padding-right: 8px;\n"
"    margin-left: 1px;\n"
"}\n"
"\n"
"\n"
"QToolButton:hover\n"
"{\n"
"    background-color: rgba(183, 134, 32, 20%);\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"    \n"
"}\n"
"\n"
"\n"
"QToolButton:pressed\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(57, 57, 57, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    border: 1px solid #b78620;\n"
"\n"
"}\n"
"\n"
"\n"
"QToolButton:checked\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(57, 57, 57, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    border: 1px solid #222;\n"
"}\n"
"\n"
"\n"
"/*-----QPushButton-----*/\n"
"QPushButton\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(84, 84, 84, 255),stop:1 rgba(59, 59, 59, 255));\n"
"    color: #ffffff;\n"
"    min-width: 80px;\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 3px;\n"
"    border-color: #051a39;\n"
"    padding: 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"QPushButton::flat\n"
"{\n"
"    background-color: transparent;\n"
"    border: none;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QPushButton::disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    border-color: #051a39;\n"
"\n"
"}\n"
"\n"
"\n"
"QPushButton::hover\n"
"{\n"
"    background-color: rgba(183, 134, 32, 20%);\n"
"    border: 1px solid #b78620;\n"
"\n"
"}\n"
"\n"
"\n"
"QPushButton::pressed\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(74, 74, 74, 255),stop:1 rgba(49, 49, 49, 255));\n"
"    border: 1px solid #b78620;\n"
"\n"
"}\n"
"\n"
"\n"
"QPushButton::checked\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(74, 74, 74, 255),stop:1 rgba(49, 49, 49, 255));\n"
"    border: 1px solid #222;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QLineEdit-----*/\n"
"QLineEdit\n"
"{\n"
"    background-color: #131313;\n"
"    color : #eee;\n"
"    border: 1px solid #343434;\n"
"    border-radius: 2px;\n"
"    padding: 3px;\n"
"    padding-left: 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QPlainTExtEdit-----*/\n"
"QPlainTextEdit\n"
"{\n"
"    background-color: #131313;\n"
"    color : #eee;\n"
"    border: 1px solid #343434;\n"
"    border-radius: 2px;\n"
"    padding: 3px;\n"
"    padding-left: 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QTabBar-----*/\n"
"QTabBar::tab\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(84, 84, 84, 255),stop:1 rgba(59, 59, 59, 255));\n"
"    color: #ffffff;\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-color: #666;\n"
"    border-bottom: none;\n"
"    padding: 5px;\n"
"    padding-left: 15px;\n"
"    padding-right: 15px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabWidget::pane \n"
"{\n"
"    background-color: red;\n"
"    border: 1px solid #666;\n"
"    top: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:last\n"
"{\n"
"    margin-right: 0; \n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:first:!selected\n"
"{\n"
"    background-color: #0c0c0d;\n"
"    margin-left: 0px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:!selected\n"
"{\n"
"    color: #b1b1b1;\n"
"    border-bottom-style: solid;\n"
"    background-color: #0c0c0d;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:selected\n"
"{\n"
"    margin-bottom: 0px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:!selected:hover\n"
"{\n"
"    border-top-color: #b78620;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QComboBox-----*/\n"
"QComboBox\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(84, 84, 84, 255),stop:1 rgba(59, 59, 59, 255));\n"
"    border: 1px solid #000;\n"
"    padding-left: 6px;\n"
"    color: #ffffff;\n"
"    height: 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox::disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    border-color: #051a39;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox:on\n"
"{\n"
"    background-color: #b78620;\n"
"    color: #000;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox QAbstractItemView\n"
"{\n"
"    background-color: #383838;\n"
"    color: #ffffff;\n"
"    border: 1px solid black;\n"
"    selection-background-color: #b78620;\n"
"    outline: 0;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox::drop-down\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(57, 57, 57, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-left-width: 1px;\n"
"    border-left-color: black;\n"
"    border-left-style: solid; \n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox::down-arrow\n"
"{\n"
"    image: url(://arrow-down.png);\n"
"    width: 8px;\n"
"    height: 8px;\n"
"}\n"
"\n"
"\n"
"/*-----QSpinBox & QDateTimeEdit-----*/\n"
"QSpinBox,\n"
"QDateTimeEdit \n"
"{\n"
"    background-color: #131313;\n"
"    color : #eee;\n"
"    border: 1px solid #343434;\n"
"    padding: 3px;\n"
"    padding-left: 5px;\n"
"    border-radius : 2px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button, \n"
"QDateTimeEdit::up-button\n"
"{\n"
"    border-top-right-radius:2px;\n"
"    background-color: #777777;\n"
"    width: 16px; \n"
"    border-width: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:hover, \n"
"QDateTimeEdit::up-button:hover\n"
"{\n"
"    background-color: #585858;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed, \n"
"QDateTimeEdit::up-button:pressed\n"
"{\n"
"    background-color: #252525;\n"
"    width: 16px; \n"
"    border-width: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-arrow,\n"
"QDateTimeEdit::up-arrow\n"
"{\n"
"    image: url(://arrow-up.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-button, \n"
"QDateTimeEdit::down-button\n"
"{\n"
"    border-bottom-right-radius:2px;\n"
"    background-color: #777777;\n"
"    width: 16px; \n"
"    border-width: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-button:hover, \n"
"QDateTimeEdit::down-button:hover\n"
"{\n"
"    background-color: #585858;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-button:pressed, \n"
"QDateTimeEdit::down-button:pressed\n"
"{\n"
"    background-color: #252525;\n"
"    width: 16px; \n"
"    border-width: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-arrow,\n"
"QDateTimeEdit::down-arrow\n"
"{\n"
"    image: url(://arrow-down.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QGroupBox-----*/\n"
"QGroupBox \n"
"{\n"
"    border: 1px solid;\n"
"    border-color: #666666;\n"
"    border-radius: 5px;\n"
"    margin-top: 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QGroupBox::title  \n"
"{\n"
"    background-color: transparent;\n"
"    color: #eee;\n"
"    subcontrol-origin: margin;\n"
"    padding: 5px;\n"
"    border-top-left-radius: 3px;\n"
"    border-top-right-radius: 3px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QHeaderView-----*/\n"
"QHeaderView::section\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(60, 60, 60, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    border: 1px solid #000;\n"
"    color: #fff;\n"
"    text-align: left;\n"
"    padding: 4px;\n"
"    \n"
"}\n"
"\n"
"\n"
"QHeaderView::section:disabled\n"
"{\n"
"    background-color: #525251;\n"
"    color: #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section:checked\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(60, 60, 60, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section::vertical::first,\n"
"QHeaderView::section::vertical::only-one\n"
"{\n"
"    border-top: 1px solid #353635;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section::vertical\n"
"{\n"
"    border-top: 1px solid #353635;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section::horizontal::first,\n"
"QHeaderView::section::horizontal::only-one\n"
"{\n"
"    border-left: 1px solid #353635;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section::horizontal\n"
"{\n"
"    border-left: 1px solid #353635;\n"
"\n"
"}\n"
"\n"
"\n"
"QTableCornerButton::section\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(60, 60, 60, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    border: 1px solid #000;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QTreeWidget-----*/\n"
"QTreeView\n"
"{\n"
"    show-decoration-selected: 1;\n"
"    alternate-background-color: #3a3a3a;\n"
"    selection-color: #fff;\n"
"    background-color: #2d2d2d;\n"
"    border: 1px solid gray;\n"
"    padding-top : 5px;\n"
"    color: #fff;\n"
"    font: 8pt;\n"
"\n"
"}\n"
"\n"
"\n"
"QTreeView::item:selected\n"
"{\n"
"    color:#fff;\n"
"    background-color: #b78620;\n"
"    border-radius: 0px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTreeView::item:!selected:hover\n"
"{\n"
"    background-color: #262626;\n"
"    border: none;\n"
"    color: white;\n"
"\n"
"}\n"
"\n"
"\n"
"QTreeView::branch:has-children:!has-siblings:closed,\n"
"QTreeView::branch:closed:has-children:has-siblings \n"
"{\n"
"    image: url(://tree-closed.png);\n"
"\n"
"}\n"
"\n"
"\n"
"QTreeView::branch:open:has-children:!has-siblings,\n"
"QTreeView::branch:open:has-children:has-siblings  \n"
"{\n"
"    image: url(://tree-open.png);\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QListView-----*/\n"
"QListView \n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(83, 83, 83, 255),stop:0.293269 rgba(81, 81, 81, 255),stop:0.634615 rgba(79, 79, 79, 255),stop:1 rgba(83, 83, 83, 255));\n"
"    border : none;\n"
"    color: white;\n"
"    show-decoration-selected: 1; \n"
"    outline: 0;\n"
"    border: 1px solid gray;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::disabled \n"
"{\n"
"    background-color: #656565;\n"
"    color: #1b1b1b;\n"
"    border: 1px solid #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::item \n"
"{\n"
"    background-color: #2d2d2d;\n"
"    padding: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::item:alternate \n"
"{\n"
"    background-color: #3a3a3a;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::item:selected \n"
"{\n"
"    background-color: #b78620;\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::item:selected:!active \n"
"{\n"
"    background-color: #b78620;\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::item:selected:active \n"
"{\n"
"    background-color: #b78620;\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::item:hover {\n"
"    background-color: #262626;\n"
"    border: none;\n"
"    color: white;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QCheckBox-----*/\n"
"QCheckBox\n"
"{\n"
"    background-color: transparent;\n"
"    color: lightgray;\n"
"    border: none;\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator\n"
"{\n"
"    background-color: #323232;\n"
"    border: 1px solid darkgray;\n"
"    width: 12px;\n"
"    height: 12px;\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator:checked\n"
"{\n"
"    image:url(\"./ressources/check.png\");\n"
"    background-color: #b78620;\n"
"    border: 1px solid #3a546e;\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator:unchecked:hover\n"
"{\n"
"    border: 1px solid #b78620; \n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::disabled\n"
"{\n"
"    color: #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator:disabled\n"
"{\n"
"    background-color: #656565;\n"
"    color: #656565;\n"
"    border: 1px solid #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QRadioButton-----*/\n"
"QRadioButton \n"
"{\n"
"    color: lightgray;\n"
"    background-color: transparent;\n"
"\n"
"}\n"
"\n"
"\n"
"QRadioButton::indicator::unchecked:hover \n"
"{\n"
"    background-color: lightgray;\n"
"    border: 2px solid #b78620;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"\n"
"QRadioButton::indicator::checked \n"
"{\n"
"    border: 2px solid #b78620;\n"
"    border-radius: 6px;\n"
"    background-color: rgba(183,134,32,20%);  \n"
"    width: 9px; \n"
"    height: 9px; \n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QSlider-----*/\n"
"QSlider::groove:horizontal \n"
"{\n"
"    background-color: transparent;\n"
"    height: 3px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::sub-page:horizontal \n"
"{\n"
"    background-color: #b78620;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::add-page:horizontal \n"
"{\n"
"    background-color: #131313;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::handle:horizontal \n"
"{\n"
"    background-color: #b78620;\n"
"    width: 14px;\n"
"    margin-top: -6px;\n"
"    margin-bottom: -6px;\n"
"    border-radius: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::handle:horizontal:hover \n"
"{\n"
"    background-color: #d89e25;\n"
"    border-radius: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::sub-page:horizontal:disabled \n"
"{\n"
"    background-color: #bbb;\n"
"    border-color: #999;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::add-page:horizontal:disabled \n"
"{\n"
"    background-color: #eee;\n"
"    border-color: #999;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::handle:horizontal:disabled \n"
"{\n"
"    background-color: #eee;\n"
"    border: 1px solid #aaa;\n"
"    border-radius: 3px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QScrollBar-----*/\n"
"QScrollBar:horizontal\n"
"{\n"
"    border: 1px solid #222222;\n"
"    background-color: #3d3d3d;\n"
"    height: 15px;\n"
"    margin: 0px 16px 0 16px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::handle:horizontal\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(97, 97, 97, 255),stop:1 rgba(90, 90, 90, 255));\n"
"    border: 1px solid #2d2d2d;\n"
"    min-height: 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-line:horizontal\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(97, 97, 97, 255),stop:1 rgba(90, 90, 90, 255));\n"
"    border: 1px solid #2d2d2d;\n"
"    width: 15px;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::sub-line:horizontal\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(97, 97, 97, 255),stop:1 rgba(90, 90, 90, 255));\n"
"    border: 1px solid #2d2d2d;\n"
"    width: 15px;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::right-arrow:horizontal\n"
"{\n"
"    image: url(://arrow-right.png);\n"
"    width: 6px;\n"
"    height: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::left-arrow:horizontal\n"
"{\n"
"    image: url(://arrow-left.png);\n"
"    width: 6px;\n"
"    height: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal\n"
"{\n"
"    background: none;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar:vertical\n"
"{\n"
"    background-color: #3d3d3d;\n"
"    width: 16px;\n"
"    border: 1px solid #2d2d2d;\n"
"    margin: 16px 0px 16px 0px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::handle:vertical\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(97, 97, 97, 255),stop:1 rgba(90, 90, 90, 255));\n"
"    border: 1px solid #2d2d2d;\n"
"    min-height: 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-line:vertical\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(97, 97, 97, 255),stop:1 rgba(90, 90, 90, 255));\n"
"    border: 1px solid #2d2d2d;\n"
"    height: 15px;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::sub-line:vertical\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(97, 97, 97, 255),stop:1 rgba(90, 90, 90, 255));\n"
"    border: 1px solid #2d2d2d;\n"
"    height: 15px;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::up-arrow:vertical\n"
"{\n"
"    image: url(://arrow-up.png);\n"
"    width: 6px;\n"
"    height: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::down-arrow:vertical\n"
"{\n"
"    image: url(://arrow-down.png);\n"
"    width: 6px;\n"
"    height: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical\n"
"{\n"
"    background: none;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QProgressBar-----*/\n"
"QProgressBar\n"
"{\n"
"    border: 1px solid #666666;\n"
"    text-align: center;\n"
"    color: #000;\n"
"    font-weight: bold;\n"
"\n"
"}\n"
"\n"
"\n"
"QProgressBar::chunk\n"
"{\n"
"    background-color: #b78620;\n"
"    width: 30px;\n"
"    margin: 0.5px;\n"
"\n"
"}\n"
"\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.tabWidget.setFont(font)
        self.tabWidget.setStyleSheet("/*Copyright (c) DevSec Studio. All rights reserved.\n"
"\n"
"MIT License\n"
"\n"
"Permission is hereby granted, free of charge, to any person obtaining a copy\n"
"of this software and associated documentation files (the \"Software\"), to deal\n"
"in the Software without restriction, including without limitation the rights\n"
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n"
"copies of the Software, and to permit persons to whom the Software is\n"
"furnished to do so, subject to the following conditions:\n"
"\n"
"The above copyright notice and this permission notice shall be included in all\n"
"copies or substantial portions of the Software.\n"
"\n"
"THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n"
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n"
"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n"
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n"
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n"
"OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
"*/\n"
"\n"
"/*-----QWidget-----*/\n"
"QWidget\n"
"{\n"
"    background-color: #3a3a3a;\n"
"    color: #fff;\n"
"    selection-background-color: #b78620;\n"
"    selection-color: #000;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QLabel-----*/\n"
"QLabel\n"
"{\n"
"    background-color: transparent;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QMenuBar-----*/\n"
"QMenuBar \n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(57, 57, 57, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    border: 1px solid #000;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenuBar::item \n"
"{\n"
"    background-color: transparent;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenuBar::item:selected \n"
"{\n"
"    background-color: rgba(183, 134, 32, 20%);\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenuBar::item:pressed \n"
"{\n"
"    background-color: rgb(183, 134, 32);\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QMenu-----*/\n"
"QMenu\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(57, 57, 57, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    border: 1px solid #222;\n"
"    padding: 4px;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenu::item\n"
"{\n"
"    background-color: transparent;\n"
"    padding: 2px 20px 2px 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenu::separator\n"
"{\n"
"       background-color: rgb(183, 134, 32);\n"
"    height: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenu::item:disabled\n"
"{\n"
"    color: #555;\n"
"    background-color: transparent;\n"
"    padding: 2px 20px 2px 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenu::item:selected\n"
"{\n"
"    background-color: rgba(183, 134, 32, 20%);\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QToolBar-----*/\n"
"QToolBar\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(69, 69, 69, 255),stop:1 rgba(58, 58, 58, 255));\n"
"    border-top: none;\n"
"    border-bottom: 1px solid #4f4f4f;\n"
"    border-left: 1px solid #4f4f4f;\n"
"    border-right: 1px solid #4f4f4f;\n"
"\n"
"}\n"
"\n"
"\n"
"QToolBar::separator\n"
"{\n"
"    background-color: #2e2e2e;\n"
"    width: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QToolButton-----*/\n"
"QToolButton \n"
"{\n"
"    background-color: transparent;\n"
"    color: #fff;\n"
"    padding: 5px;\n"
"    padding-left: 8px;\n"
"    padding-right: 8px;\n"
"    margin-left: 1px;\n"
"}\n"
"\n"
"\n"
"QToolButton:hover\n"
"{\n"
"    background-color: rgba(183, 134, 32, 20%);\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"    \n"
"}\n"
"\n"
"\n"
"QToolButton:pressed\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(57, 57, 57, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    border: 1px solid #b78620;\n"
"\n"
"}\n"
"\n"
"\n"
"QToolButton:checked\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(57, 57, 57, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    border: 1px solid #222;\n"
"}\n"
"\n"
"\n"
"/*-----QPushButton-----*/\n"
"QPushButton\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(84, 84, 84, 255),stop:1 rgba(59, 59, 59, 255));\n"
"    color: #ffffff;\n"
"    min-width: 80px;\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 3px;\n"
"    border-color: #051a39;\n"
"    padding: 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"QPushButton::flat\n"
"{\n"
"    background-color: transparent;\n"
"    border: none;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QPushButton::disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    border-color: #051a39;\n"
"\n"
"}\n"
"\n"
"\n"
"QPushButton::hover\n"
"{\n"
"    background-color: rgba(183, 134, 32, 20%);\n"
"    border: 1px solid #b78620;\n"
"\n"
"}\n"
"\n"
"\n"
"QPushButton::pressed\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(74, 74, 74, 255),stop:1 rgba(49, 49, 49, 255));\n"
"    border: 1px solid #b78620;\n"
"\n"
"}\n"
"\n"
"\n"
"QPushButton::checked\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(74, 74, 74, 255),stop:1 rgba(49, 49, 49, 255));\n"
"    border: 1px solid #222;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QLineEdit-----*/\n"
"QLineEdit\n"
"{\n"
"    background-color: #131313;\n"
"    color : #eee;\n"
"    border: 1px solid #343434;\n"
"    border-radius: 2px;\n"
"    padding: 3px;\n"
"    padding-left: 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QPlainTExtEdit-----*/\n"
"QPlainTextEdit\n"
"{\n"
"    background-color: #131313;\n"
"    color : #eee;\n"
"    border: 1px solid #343434;\n"
"    border-radius: 2px;\n"
"    padding: 3px;\n"
"    padding-left: 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QTabBar-----*/\n"
"QTabBar::tab\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(84, 84, 84, 255),stop:1 rgba(59, 59, 59, 255));\n"
"    color: #ffffff;\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-color: #666;\n"
"    border-bottom: none;\n"
"    padding: 5px;\n"
"    padding-left: 15px;\n"
"    padding-right: 15px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabWidget::pane \n"
"{\n"
"    background-color: red;\n"
"    border: 1px solid #666;\n"
"    top: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:last\n"
"{\n"
"    margin-right: 0; \n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:first:!selected\n"
"{\n"
"    background-color: #0c0c0d;\n"
"    margin-left: 0px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:!selected\n"
"{\n"
"    color: #b1b1b1;\n"
"    border-bottom-style: solid;\n"
"    background-color: #0c0c0d;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:selected\n"
"{\n"
"    margin-bottom: 0px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:!selected:hover\n"
"{\n"
"    border-top-color: #b78620;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QComboBox-----*/\n"
"QComboBox\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(84, 84, 84, 255),stop:1 rgba(59, 59, 59, 255));\n"
"    border: 1px solid #000;\n"
"    padding-left: 6px;\n"
"    color: #ffffff;\n"
"    height: 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox::disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    border-color: #051a39;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox:on\n"
"{\n"
"    background-color: #b78620;\n"
"    color: #000;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox QAbstractItemView\n"
"{\n"
"    background-color: #383838;\n"
"    color: #ffffff;\n"
"    border: 1px solid black;\n"
"    selection-background-color: #b78620;\n"
"    outline: 0;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox::drop-down\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(57, 57, 57, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-left-width: 1px;\n"
"    border-left-color: black;\n"
"    border-left-style: solid; \n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox::down-arrow\n"
"{\n"
"    image: url(://arrow-down.png);\n"
"    width: 8px;\n"
"    height: 8px;\n"
"}\n"
"\n"
"\n"
"/*-----QSpinBox & QDateTimeEdit-----*/\n"
"QSpinBox,\n"
"QDateTimeEdit \n"
"{\n"
"    background-color: #131313;\n"
"    color : #eee;\n"
"    border: 1px solid #343434;\n"
"    padding: 3px;\n"
"    padding-left: 5px;\n"
"    border-radius : 2px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button, \n"
"QDateTimeEdit::up-button\n"
"{\n"
"    border-top-right-radius:2px;\n"
"    background-color: #777777;\n"
"    width: 16px; \n"
"    border-width: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:hover, \n"
"QDateTimeEdit::up-button:hover\n"
"{\n"
"    background-color: #585858;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed, \n"
"QDateTimeEdit::up-button:pressed\n"
"{\n"
"    background-color: #252525;\n"
"    width: 16px; \n"
"    border-width: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-arrow,\n"
"QDateTimeEdit::up-arrow\n"
"{\n"
"    image: url(://arrow-up.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-button, \n"
"QDateTimeEdit::down-button\n"
"{\n"
"    border-bottom-right-radius:2px;\n"
"    background-color: #777777;\n"
"    width: 16px; \n"
"    border-width: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-button:hover, \n"
"QDateTimeEdit::down-button:hover\n"
"{\n"
"    background-color: #585858;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-button:pressed, \n"
"QDateTimeEdit::down-button:pressed\n"
"{\n"
"    background-color: #252525;\n"
"    width: 16px; \n"
"    border-width: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-arrow,\n"
"QDateTimeEdit::down-arrow\n"
"{\n"
"    image: url(://arrow-down.png);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QGroupBox-----*/\n"
"QGroupBox \n"
"{\n"
"    border: 1px solid;\n"
"    border-color: #666666;\n"
"    border-radius: 5px;\n"
"    margin-top: 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QGroupBox::title  \n"
"{\n"
"    background-color: transparent;\n"
"    color: #eee;\n"
"    subcontrol-origin: margin;\n"
"    padding: 5px;\n"
"    border-top-left-radius: 3px;\n"
"    border-top-right-radius: 3px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QHeaderView-----*/\n"
"QHeaderView::section\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(60, 60, 60, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    border: 1px solid #000;\n"
"    color: #fff;\n"
"    text-align: left;\n"
"    padding: 4px;\n"
"    \n"
"}\n"
"\n"
"\n"
"QHeaderView::section:disabled\n"
"{\n"
"    background-color: #525251;\n"
"    color: #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section:checked\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(60, 60, 60, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section::vertical::first,\n"
"QHeaderView::section::vertical::only-one\n"
"{\n"
"    border-top: 1px solid #353635;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section::vertical\n"
"{\n"
"    border-top: 1px solid #353635;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section::horizontal::first,\n"
"QHeaderView::section::horizontal::only-one\n"
"{\n"
"    border-left: 1px solid #353635;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section::horizontal\n"
"{\n"
"    border-left: 1px solid #353635;\n"
"\n"
"}\n"
"\n"
"\n"
"QTableCornerButton::section\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(60, 60, 60, 255),stop:1 rgba(50, 50, 50, 255));\n"
"    border: 1px solid #000;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QTreeWidget-----*/\n"
"QTreeView\n"
"{\n"
"    show-decoration-selected: 1;\n"
"    alternate-background-color: #3a3a3a;\n"
"    selection-color: #fff;\n"
"    background-color: #2d2d2d;\n"
"    border: 1px solid gray;\n"
"    padding-top : 5px;\n"
"    color: #fff;\n"
"    font: 8pt;\n"
"\n"
"}\n"
"\n"
"\n"
"QTreeView::item:selected\n"
"{\n"
"    color:#fff;\n"
"    background-color: #b78620;\n"
"    border-radius: 0px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTreeView::item:!selected:hover\n"
"{\n"
"    background-color: #262626;\n"
"    border: none;\n"
"    color: white;\n"
"\n"
"}\n"
"\n"
"\n"
"QTreeView::branch:has-children:!has-siblings:closed,\n"
"QTreeView::branch:closed:has-children:has-siblings \n"
"{\n"
"    image: url(://tree-closed.png);\n"
"\n"
"}\n"
"\n"
"\n"
"QTreeView::branch:open:has-children:!has-siblings,\n"
"QTreeView::branch:open:has-children:has-siblings  \n"
"{\n"
"    image: url(://tree-open.png);\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QListView-----*/\n"
"QListView \n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(83, 83, 83, 255),stop:0.293269 rgba(81, 81, 81, 255),stop:0.634615 rgba(79, 79, 79, 255),stop:1 rgba(83, 83, 83, 255));\n"
"    border : none;\n"
"    color: white;\n"
"    show-decoration-selected: 1; \n"
"    outline: 0;\n"
"    border: 1px solid gray;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::disabled \n"
"{\n"
"    background-color: #656565;\n"
"    color: #1b1b1b;\n"
"    border: 1px solid #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::item \n"
"{\n"
"    background-color: #2d2d2d;\n"
"    padding: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::item:alternate \n"
"{\n"
"    background-color: #3a3a3a;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::item:selected \n"
"{\n"
"    background-color: #b78620;\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::item:selected:!active \n"
"{\n"
"    background-color: #b78620;\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::item:selected:active \n"
"{\n"
"    background-color: #b78620;\n"
"    border: 1px solid #b78620;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QListView::item:hover {\n"
"    background-color: #262626;\n"
"    border: none;\n"
"    color: white;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QCheckBox-----*/\n"
"QCheckBox\n"
"{\n"
"    background-color: transparent;\n"
"    color: lightgray;\n"
"    border: none;\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator\n"
"{\n"
"    background-color: #323232;\n"
"    border: 1px solid darkgray;\n"
"    width: 12px;\n"
"    height: 12px;\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator:checked\n"
"{\n"
"    image:url(\"./ressources/check.png\");\n"
"    background-color: #b78620;\n"
"    border: 1px solid #3a546e;\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator:unchecked:hover\n"
"{\n"
"    border: 1px solid #b78620; \n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::disabled\n"
"{\n"
"    color: #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator:disabled\n"
"{\n"
"    background-color: #656565;\n"
"    color: #656565;\n"
"    border: 1px solid #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QRadioButton-----*/\n"
"QRadioButton \n"
"{\n"
"    color: lightgray;\n"
"    background-color: transparent;\n"
"\n"
"}\n"
"\n"
"\n"
"QRadioButton::indicator::unchecked:hover \n"
"{\n"
"    background-color: lightgray;\n"
"    border: 2px solid #b78620;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"\n"
"QRadioButton::indicator::checked \n"
"{\n"
"    border: 2px solid #b78620;\n"
"    border-radius: 6px;\n"
"    background-color: rgba(183,134,32,20%);  \n"
"    width: 9px; \n"
"    height: 9px; \n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QSlider-----*/\n"
"QSlider::groove:horizontal \n"
"{\n"
"    background-color: transparent;\n"
"    height: 3px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::sub-page:horizontal \n"
"{\n"
"    background-color: #b78620;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::add-page:horizontal \n"
"{\n"
"    background-color: #131313;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::handle:horizontal \n"
"{\n"
"    background-color: #b78620;\n"
"    width: 14px;\n"
"    margin-top: -6px;\n"
"    margin-bottom: -6px;\n"
"    border-radius: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::handle:horizontal:hover \n"
"{\n"
"    background-color: #d89e25;\n"
"    border-radius: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::sub-page:horizontal:disabled \n"
"{\n"
"    background-color: #bbb;\n"
"    border-color: #999;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::add-page:horizontal:disabled \n"
"{\n"
"    background-color: #eee;\n"
"    border-color: #999;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::handle:horizontal:disabled \n"
"{\n"
"    background-color: #eee;\n"
"    border: 1px solid #aaa;\n"
"    border-radius: 3px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QScrollBar-----*/\n"
"QScrollBar:horizontal\n"
"{\n"
"    border: 1px solid #222222;\n"
"    background-color: #3d3d3d;\n"
"    height: 15px;\n"
"    margin: 0px 16px 0 16px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::handle:horizontal\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(97, 97, 97, 255),stop:1 rgba(90, 90, 90, 255));\n"
"    border: 1px solid #2d2d2d;\n"
"    min-height: 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-line:horizontal\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(97, 97, 97, 255),stop:1 rgba(90, 90, 90, 255));\n"
"    border: 1px solid #2d2d2d;\n"
"    width: 15px;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::sub-line:horizontal\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(97, 97, 97, 255),stop:1 rgba(90, 90, 90, 255));\n"
"    border: 1px solid #2d2d2d;\n"
"    width: 15px;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::right-arrow:horizontal\n"
"{\n"
"    image: url(://arrow-right.png);\n"
"    width: 6px;\n"
"    height: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::left-arrow:horizontal\n"
"{\n"
"    image: url(://arrow-left.png);\n"
"    width: 6px;\n"
"    height: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal\n"
"{\n"
"    background: none;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar:vertical\n"
"{\n"
"    background-color: #3d3d3d;\n"
"    width: 16px;\n"
"    border: 1px solid #2d2d2d;\n"
"    margin: 16px 0px 16px 0px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::handle:vertical\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(97, 97, 97, 255),stop:1 rgba(90, 90, 90, 255));\n"
"    border: 1px solid #2d2d2d;\n"
"    min-height: 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-line:vertical\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(97, 97, 97, 255),stop:1 rgba(90, 90, 90, 255));\n"
"    border: 1px solid #2d2d2d;\n"
"    height: 15px;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::sub-line:vertical\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(97, 97, 97, 255),stop:1 rgba(90, 90, 90, 255));\n"
"    border: 1px solid #2d2d2d;\n"
"    height: 15px;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::up-arrow:vertical\n"
"{\n"
"    image: url(://arrow-up.png);\n"
"    width: 6px;\n"
"    height: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::down-arrow:vertical\n"
"{\n"
"    image: url(://arrow-down.png);\n"
"    width: 6px;\n"
"    height: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical\n"
"{\n"
"    background: none;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QProgressBar-----*/\n"
"QProgressBar\n"
"{\n"
"    border: 1px solid #666666;\n"
"    text-align: center;\n"
"    color: #000;\n"
"    font-weight: bold;\n"
"\n"
"}\n"
"\n"
"\n"
"QProgressBar::chunk\n"
"{\n"
"    background-color: #b78620;\n"
"    width: 30px;\n"
"    margin: 0.5px;\n"
"\n"
"}\n"
"\n"
"")
        
        self.volumearray = np.linspace(-65.25, 0, 100)
        self.paused=False
        self.NoteIndex = 0
        self.strings=['e2','a2','d3','g3','b3','e4']
        self.dropDstrings=['d2','a2','d3','g3','b3','e4']
        self.BluesTuning=['d2','g2','d3','g3','b3','d4']
        self.Tunings=[self.strings, self.dropDstrings, self.BluesTuning]
        self.pianonotenames=['c','c#','d','d#','e','f','f#','g','g#','a','a#','b','c5','c#5','d5','d#5','e5','f5','f#5','g5','g#5','a5','a#5','b5','c6']
        self.notefreqs=[130.81,138.59,146.83,155.56,164.81,174.61,185.00,196.00,207.65,220.00,233.08,246.94]
        self.octavemultiplier=[1, 2, 3]
        self.bongo1=r'Bongo1.wav'
        self.bongo2=r'Bongo2.wav'
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setElideMode(QtCore.Qt.ElideLeft)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(True)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.Music = QtWidgets.QWidget()
        self.Music.setObjectName("Music")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.Music)
        self.gridLayout_3.setObjectName("gridLayout_3")
        spacerItem = QtWidgets.QSpacerItem(463, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem, 1, 0, 1, 1)
        self.Spectrogram_groupBox = QtWidgets.QGroupBox(self.Music)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.Spectrogram_groupBox.setFont(font)
        self.Spectrogram_groupBox.setObjectName("Spectrogram_groupBox")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.Spectrogram_groupBox)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.Spectrogram_widget = pyqtgraph.GraphicsLayoutWidget(self.Spectrogram_groupBox)
        self.Spectrogram_widget.setObjectName("Spectrogram_widget")
        self.gridLayout_7.addWidget(self.Spectrogram_widget, 0, 0, 1, 1)
        self.gridLayout_3.addWidget(self.Spectrogram_groupBox, 0, 1, 1, 1)
        self.Frequency_groupBox = QtWidgets.QGroupBox(self.Music)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.Frequency_groupBox.setFont(font)
        self.Frequency_groupBox.setObjectName("Frequency_groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.Frequency_groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.Drums_horizontalSlider = QtWidgets.QSlider(self.Frequency_groupBox)
        self.Drums_horizontalSlider.setMaximum(100)
        self.Drums_horizontalSlider.setSliderPosition(50)
        self.Drums_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.Drums_horizontalSlider.setObjectName("Drums_horizontalSlider")
        self.gridLayout.addWidget(self.Drums_horizontalSlider, 2, 1, 1, 1)
        self.label = QtWidgets.QLabel(self.Frequency_groupBox)
        self.label.setMinimumSize(QtCore.QSize(30, 30))
        self.label.setStyleSheet("image: url(:/newPrefix/orange-piano-icon.png);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.Guitar_horizontalSlider = QtWidgets.QSlider(self.Frequency_groupBox)
        self.Guitar_horizontalSlider.setMaximum(100)
        self.Guitar_horizontalSlider.setSliderPosition(50)
        self.Guitar_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.Guitar_horizontalSlider.setObjectName("Guitar_horizontalSlider")
        self.gridLayout.addWidget(self.Guitar_horizontalSlider, 1, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.Frequency_groupBox)
        self.label_2.setMinimumSize(QtCore.QSize(30, 30))
        self.label_2.setStyleSheet("image: url(:/newPrefix/guitar-icon-png-7.png);")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 1, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.Frequency_groupBox)
        self.label_4.setMinimumSize(QtCore.QSize(30, 30))
        self.label_4.setStyleSheet("image: url(:/newPrefix/R (1).png);")
        self.label_4.setText("")
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 2, 0, 1, 1)
        self.Piano_horizontalSlider = QtWidgets.QSlider(self.Frequency_groupBox)
        self.Piano_horizontalSlider.setMaximum(100)
        self.Piano_horizontalSlider.setSliderPosition(50)
        self.Piano_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.Piano_horizontalSlider.setObjectName("Piano_horizontalSlider")
        self.gridLayout.addWidget(self.Piano_horizontalSlider, 0, 1, 1, 1)
        self.gridLayout_3.addWidget(self.Frequency_groupBox, 2, 1, 1, 1)
        self.MainGraph_groupBox = QtWidgets.QGroupBox(self.Music)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.MainGraph_groupBox.setFont(font)
        self.MainGraph_groupBox.setAcceptDrops(False)
        self.MainGraph_groupBox.setFlat(False)
        self.MainGraph_groupBox.setCheckable(False)
        self.MainGraph_groupBox.setObjectName("MainGraph_groupBox")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.MainGraph_groupBox)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.MainGraph_widget = PlotWidget(self.MainGraph_groupBox)
        self.MainGraph_widget.setObjectName("MainGraph_widget")
        self.gridLayout_6.addWidget(self.MainGraph_widget, 0, 0, 1, 1)
        self.gridLayout_3.addWidget(self.MainGraph_groupBox, 0, 0, 1, 1)
        self.groupBox_4 = QtWidgets.QGroupBox(self.Music)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_4.setFont(font)
        self.groupBox_4.setObjectName("groupBox_4")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.groupBox_4)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.Volume_horizontalSlider = QtWidgets.QSlider(self.groupBox_4)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.Volume_horizontalSlider.setFont(font)
        self.Volume_horizontalSlider.setCursor(QtGui.QCursor(QtCore.Qt.ClosedHandCursor))
        self.Volume_horizontalSlider.setAutoFillBackground(False)
        self.Volume_horizontalSlider.setMaximum(100)
        self.Volume_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.Volume_horizontalSlider.setInvertedAppearance(False)
        self.Volume_horizontalSlider.setInvertedControls(False)
        self.Volume_horizontalSlider.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.Volume_horizontalSlider.setObjectName("Volume_horizontalSlider")
        self.gridLayout_5.addWidget(self.Volume_horizontalSlider, 2, 1, 1, 2)
        self.Browse_pushbutton = QtWidgets.QPushButton(self.groupBox_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.Browse_pushbutton.setFont(font)
        self.Browse_pushbutton.setStyleSheet("color: rgb(255, 170, 0);\n"
        "color: rgb(255, 255, 255);")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Places-folder-orange-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Browse_pushbutton.setIcon(icon)
        self.Browse_pushbutton.setObjectName("Browse_pushbutton")
        self.gridLayout_5.addWidget(self.Browse_pushbutton, 4, 0, 1, 3)
        self.Play_pushButton = QtWidgets.QPushButton(self.groupBox_4)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/newPrefix/play-icon-11-256.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Play_pushButton.setIcon(icon1)
        self.Play_pushButton.setCheckable(False)
        self.Play_pushButton.setFlat(False)
        self.Play_pushButton.setObjectName("Play_pushButton")
        self.gridLayout_5.addWidget(self.Play_pushButton, 0, 0, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.groupBox_4)
        self.label_6.setStyleSheet("image: url(:/newPrefix/speaker-icon-15.png);")
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.gridLayout_5.addWidget(self.label_6, 2, 0, 1, 1)
        self.Stop_pushButton = QtWidgets.QPushButton(self.groupBox_4)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/newPrefix/R (6).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Stop_pushButton.setIcon(icon2)
        self.Stop_pushButton.setObjectName("Stop_pushButton")
        self.gridLayout_5.addWidget(self.Stop_pushButton, 0, 2, 1, 1)
        self.Pause_pushButton = QtWidgets.QPushButton(self.groupBox_4)
        self.Pause_pushButton.setStyleSheet("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/newPrefix/pause-icon-11-256.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Pause_pushButton.setIcon(icon3)
        self.Pause_pushButton.setFlat(False)
        self.Pause_pushButton.setObjectName("Pause_pushButton")
        self.gridLayout_5.addWidget(self.Pause_pushButton, 0, 1, 1, 1)
        self.gridLayout_3.addWidget(self.groupBox_4, 2, 0, 1, 1)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("R (3).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.Music, icon4, "")
        self.instruments = QtWidgets.QWidget()
        self.instruments.setObjectName("instruments")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.instruments)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.instruments)
        self.tabWidget_2.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget_2.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget_2.setIconSize(QtCore.QSize(20, 20))
        self.tabWidget_2.setElideMode(QtCore.Qt.ElideLeft)
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.widget = QtWidgets.QWidget()
        self.widget.setObjectName("widget")
        self.label_5 = QtWidgets.QLabel(self.widget)
        self.label_5.setGeometry(QtCore.QRect(40, 60, 801, 341))
        self.label_5.setStyleSheet("image: url(:/newPrefix/R (2).png);")
        self.label_5.setText("")
        self.label_5.setObjectName("label_5")
        self.Drums_pushbutton1 = QtWidgets.QPushButton(self.widget)
        self.Drums_pushbutton1.setGeometry(QtCore.QRect(230, 90, 161, 61))
        self.Drums_pushbutton1.setText("")
        self.Drums_pushbutton1.setFlat(True)
        self.Drums_pushbutton1.setObjectName("Drums_pushbutton1")
        self.Drums_pushButton2 = QtWidgets.QPushButton(self.widget)
        self.Drums_pushButton2.setGeometry(QtCore.QRect(450, 60, 191, 81))
        self.Drums_pushButton2.setText("")
        self.Drums_pushButton2.setFlat(True)
        self.Drums_pushButton2.setObjectName("Drums_pushButton2")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("R (10).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget_2.addTab(self.widget, icon5, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.label_7 = QtWidgets.QLabel(self.tab_2)
        self.label_7.setGeometry(QtCore.QRect(30, 10, 881, 401))
        self.label_7.setStyleSheet("image: url(:/newPrefix/screen-3.webp);")
        self.label_7.setText("")
        self.label_7.setPixmap(QtGui.QPixmap(":/newPrefix/screen-3.webp"))
        self.label_7.setScaledContents(True)
        self.label_7.setObjectName("label_7")
        self.PianoTypeCombo =QtWidgets.QComboBox(self.tab_2)
        self.PianoTypeCombo.setGeometry(QtCore.QRect(460, 60, 201, 22))
        self.PianoTypeCombo.addItem("")
        self.PianoTypeCombo.addItem("")
        self.PianoTypeCombo.addItem("")
        self.PianoSustain= QtWidgets.QCheckBox(self.tab_2)
        self.PianoSustain.setGeometry(QtCore.QRect(460, 90, 201, 22))
        self.PianoSustain.setText("Sustain")
        self.C2_pushbutton = QtWidgets.QPushButton(self.tab_2)
        self.C2_pushbutton.setGeometry(QtCore.QRect(40, 290, 92, 81))
        self.C2_pushbutton.setMinimumSize(QtCore.QSize(92, 0))
        self.C2_pushbutton.setStyleSheet("")
        self.C2_pushbutton.setText("")
        self.C2_pushbutton.setFlat(True)
        self.C2_pushbutton.setObjectName("C2_pushbutton")
        self.D2_pushbutton = QtWidgets.QPushButton(self.tab_2)
        self.D2_pushbutton.setGeometry(QtCore.QRect(120, 290, 92, 81))
        self.D2_pushbutton.setMinimumSize(QtCore.QSize(92, 0))
        self.D2_pushbutton.setStyleSheet("")
        self.D2_pushbutton.setText("")
        self.D2_pushbutton.setFlat(True)
        self.D2_pushbutton.setObjectName("D2_pushbutton")
        self.CHash2_pushbutton = QtWidgets.QPushButton(self.tab_2)
        self.CHash2_pushbutton.setGeometry(QtCore.QRect(80, 170, 92, 91))
        self.CHash2_pushbutton.setText("")
        self.CHash2_pushbutton.setFlat(True)
        self.CHash2_pushbutton.setObjectName("CHash2_pushbutton")
        self.DHash2_pushbutton = QtWidgets.QPushButton(self.tab_2)
        self.DHash2_pushbutton.setGeometry(QtCore.QRect(170, 170, 93, 91))
        self.DHash2_pushbutton.setText("")
        self.DHash2_pushbutton.setFlat(True)
        self.DHash2_pushbutton.setObjectName("DHash2_pushbutton")
        self.E2_pushbutton = QtWidgets.QPushButton(self.tab_2)
        self.E2_pushbutton.setGeometry(QtCore.QRect(210, 290, 92, 81))
        self.E2_pushbutton.setMinimumSize(QtCore.QSize(92, 0))
        self.E2_pushbutton.setText("")
        self.E2_pushbutton.setFlat(True)
        self.E2_pushbutton.setObjectName("E2_pushbutton")
        self.F2_pushbutton = QtWidgets.QPushButton(self.tab_2)
        self.F2_pushbutton.setGeometry(QtCore.QRect(290, 300, 92, 71))
        self.F2_pushbutton.setMinimumSize(QtCore.QSize(92, 0))
        self.F2_pushbutton.setText("")
        self.F2_pushbutton.setFlat(True)
        self.F2_pushbutton.setObjectName("F2_pushbutton")
        self.FHash2_pushButton = QtWidgets.QPushButton(self.tab_2)
        self.FHash2_pushButton.setGeometry(QtCore.QRect(330, 180, 93, 81))
        self.FHash2_pushButton.setText("")
        self.FHash2_pushButton.setFlat(True)
        self.FHash2_pushButton.setObjectName("FHash2_pushButton")
        self.G2_pushbutton = QtWidgets.QPushButton(self.tab_2)
        self.G2_pushbutton.setGeometry(QtCore.QRect(380, 290, 92, 81))
        self.G2_pushbutton.setMinimumSize(QtCore.QSize(92, 0))
        self.G2_pushbutton.setText("")
        self.G2_pushbutton.setFlat(True)
        self.G2_pushbutton.setObjectName("G2_pushbutton")
        self.GHash2_pushButton = QtWidgets.QPushButton(self.tab_2)
        self.GHash2_pushButton.setGeometry(QtCore.QRect(420, 180, 93, 81))
        self.GHash2_pushButton.setText("")
        self.GHash2_pushButton.setFlat(True)
        self.GHash2_pushButton.setObjectName("GHash2_pushButton")
        self.A2_pushbutton = QtWidgets.QPushButton(self.tab_2)
        self.A2_pushbutton.setGeometry(QtCore.QRect(460, 300, 92, 71))
        self.A2_pushbutton.setMinimumSize(QtCore.QSize(92, 0))
        self.A2_pushbutton.setText("")
        self.A2_pushbutton.setFlat(True)
        self.A2_pushbutton.setObjectName("A2_pushbutton")
        self.AHash2_pushButton = QtWidgets.QPushButton(self.tab_2)
        self.AHash2_pushButton.setGeometry(QtCore.QRect(510, 180, 93, 81))
        self.AHash2_pushButton.setText("")
        self.AHash2_pushButton.setFlat(True)
        self.AHash2_pushButton.setObjectName("AHash2_pushButton")
        self.B2_pushbutton = QtWidgets.QPushButton(self.tab_2)
        self.B2_pushbutton.setGeometry(QtCore.QRect(550, 280, 92, 91))
        self.B2_pushbutton.setMinimumSize(QtCore.QSize(92, 0))
        self.B2_pushbutton.setText("")
        self.B2_pushbutton.setFlat(True)
        self.B2_pushbutton.setObjectName("B2_pushbutton")
        self.C3_pushbutton = QtWidgets.QPushButton(self.tab_2)
        self.C3_pushbutton.setGeometry(QtCore.QRect(630, 290, 92, 81))
        self.C3_pushbutton.setMinimumSize(QtCore.QSize(92, 0))
        self.C3_pushbutton.setText("")
        self.C3_pushbutton.setFlat(True)
        self.C3_pushbutton.setObjectName("C3_pushbutton")
        self.CHash3_pushButton = QtWidgets.QPushButton(self.tab_2)
        self.CHash3_pushButton.setGeometry(QtCore.QRect(670, 180, 93, 81))
        self.CHash3_pushButton.setText("")
        self.CHash3_pushButton.setFlat(True)
        self.CHash3_pushButton.setObjectName("CHash3_pushButton")
        self.D3_pushbutton = QtWidgets.QPushButton(self.tab_2)
        self.D3_pushbutton.setGeometry(QtCore.QRect(720, 290, 92, 81))
        self.D3_pushbutton.setMinimumSize(QtCore.QSize(92, 0))
        self.D3_pushbutton.setText("")
        self.D3_pushbutton.setFlat(True)
        self.D3_pushbutton.setObjectName("D3_pushbutton")
        self.E3_pushbutton = QtWidgets.QPushButton(self.tab_2)
        self.E3_pushbutton.setGeometry(QtCore.QRect(800, 290, 92, 81))
        self.E3_pushbutton.setMinimumSize(QtCore.QSize(92, 0))
        self.E3_pushbutton.setText("")
        self.E3_pushbutton.setFlat(True)
        self.E3_pushbutton.setObjectName("E3_pushbutton")
        self.DHash3_pushButton = QtWidgets.QPushButton(self.tab_2)
        self.DHash3_pushButton.setGeometry(QtCore.QRect(770, 180, 93, 81))
        self.DHash3_pushButton.setText("")
        self.DHash3_pushButton.setFlat(True)
        self.DHash3_pushButton.setObjectName("DHash3_pushButton")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("R (8).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget_2.addTab(self.tab_2, icon6, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.label_3 = QtWidgets.QLabel(self.tab_3)
        self.label_3.setGeometry(QtCore.QRect(20, -30, 861, 461))
        self.label_3.setStyleSheet("image: url(:/newPrefix/front-Horizontal-1.png);")
        self.label_3.setText("")
        self.label_3.setObjectName("label_3")
        self.LetRingCheckBox = QtWidgets.QCheckBox(self.tab_3)
        self.LetRingCheckBox.setGeometry(QtCore.QRect(530,120,81,20))
        self.LetRingCheckBox.setText('Let Ring')
        self.TuningLabel = QtWidgets.QLabel(self.tab_3)
        self.TuningLabel.setText('Tuning:')
        self.TuningLabel.setGeometry(QtCore.QRect(770, 130, 55, 16))
        self.TuningCombo = QtWidgets.QComboBox(self.tab_3)
        self.TuningCombo.setGeometry(QtCore.QRect(730, 190, 121, 22))
        self.TuningCombo.addItem("")
        self.TuningCombo.addItem("")
        self.TuningCombo.addItem("")
        self.GuitarE_pushbutton = QtWidgets.QPushButton(self.tab_3)
        self.GuitarE_pushbutton.setGeometry(QtCore.QRect(220, 170, 92, 16))
        self.GuitarE_pushbutton.setMinimumSize(QtCore.QSize(92, 0))
        self.GuitarE_pushbutton.setText("")
        self.GuitarE_pushbutton.setFlat(True)
        self.GuitarE_pushbutton.setObjectName("GuitarE_pushbutton")
        self.GuitarA_pushbutton = QtWidgets.QPushButton(self.tab_3)
        self.GuitarA_pushbutton.setGeometry(QtCore.QRect(270, 180, 92, 16))
        self.GuitarA_pushbutton.setMinimumSize(QtCore.QSize(92, 0))
        self.GuitarA_pushbutton.setText("")
        self.GuitarA_pushbutton.setFlat(True)
        self.GuitarA_pushbutton.setObjectName("GuitarA_pushbutton")
        self.GuitarD_pushButton = QtWidgets.QPushButton(self.tab_3)
        self.GuitarD_pushButton.setGeometry(QtCore.QRect(290, 190, 92, 16))
        self.GuitarD_pushButton.setMinimumSize(QtCore.QSize(92, 0))
        self.GuitarD_pushButton.setText("")
        self.GuitarD_pushButton.setFlat(True)
        self.GuitarD_pushButton.setObjectName("GuitarD_pushButton")
        self.GuitarB_pushbutton = QtWidgets.QPushButton(self.tab_3)
        self.GuitarB_pushbutton.setGeometry(QtCore.QRect(320, 200, 92, 16))
        self.GuitarB_pushbutton.setMinimumSize(QtCore.QSize(92, 0))
        self.GuitarB_pushbutton.setText("")
        self.GuitarB_pushbutton.setFlat(True)
        self.GuitarB_pushbutton.setObjectName("GuitarB_pushbutton")
        self.GuitarG_pushButton = QtWidgets.QPushButton(self.tab_3)
        self.GuitarG_pushButton.setGeometry(QtCore.QRect(360, 210, 92, 16))
        self.GuitarG_pushButton.setMinimumSize(QtCore.QSize(92, 0))
        self.GuitarG_pushButton.setText("")
        self.GuitarG_pushButton.setFlat(True)
        self.GuitarG_pushButton.setObjectName("GuitarG_pushButton")
        



        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("R (9).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget_2.addTab(self.tab_3, icon7, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.tab)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.Notes_comboBox = QtWidgets.QComboBox(self.tab)
        self.Notes_comboBox.setObjectName("Notes_comboBox")
        self.Notes_comboBox.addItem("")
        self.Notes_comboBox.addItem("")
        self.Notes_comboBox.addItem("")
        self.Notes_comboBox.addItem("")
        self.Notes_comboBox.addItem("")
        self.Notes_comboBox.addItem("")
        self.Notes_comboBox.addItem("")
        self.Notes_comboBox.addItem("")
        self.Notes_comboBox.addItem("")
        self.Notes_comboBox.addItem("")
        self.Notes_comboBox.addItem("")
        self.Notes_comboBox.addItem("")
        self.gridLayout_8.addWidget(self.Notes_comboBox, 0, 0, 1, 1)
        self.sine = QtWidgets.QRadioButton(self.tab)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.sine.setFont(font)
        self.sine.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("002_051_sound_wave_sine_synth_music-128.webp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.sine.setIcon(icon8)
        self.sine.setIconSize(QtCore.QSize(60, 60))
        self.sine.setObjectName("sine")
        self.sine.setChecked(1)
        self.gridLayout_8.addWidget(self.sine, 3, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem1, 2, 0, 1, 2)
        self.comboBox_2 = QtWidgets.QComboBox(self.tab)
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.gridLayout_8.addWidget(self.comboBox_2, 0, 1, 1, 1)
        self.radioButton_2 = QtWidgets.QRadioButton(self.tab)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("002_054_sound_wave_square_synth_music-512.webp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.radioButton_2.setIcon(icon9)
        self.radioButton_2.setIconSize(QtCore.QSize(60, 60))
        self.radioButton_2.setObjectName("radioButton_2")
        self.gridLayout_8.addWidget(self.radioButton_2, 3, 1, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.tab)
        font = QtGui.QFont()
        font.setFamily("Myanmar Text")
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_8.addWidget(self.pushButton, 4, 0, 1, 2)
        self.horizontalSlider = QtWidgets.QSlider(self.tab)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.gridLayout_8.addWidget(self.horizontalSlider, 1, 0, 1, 2)
        self.tabWidget_2.addTab(self.tab, icon8, "")
        self.gridLayout_2.addWidget(self.tabWidget_2, 0, 0, 1, 1)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("R (4).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.instruments, icon10, "")
        self.gridLayout_4.addWidget(self.tabWidget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        self.tabWidget_2.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.horizontalSlider.setMaximum(10)
        self.horizontalSlider.setMinimum(1)
        # self.Spectrogram_Widget = pyqtgraph.GraphicsLayoutWidget(self.Spectrogram_groupBox)
        # self.Spectrogram_Widget.setObjectName("Spectrogram_Widget")
        # self.gridLayout_3 = QtWidgets.QGridLayout(self.Spectrogram_groupBox)
        # self.gridLayout_3.setObjectName("gridLayout_3")
        # self.gridLayout_3.addWidget(self.Spectrogram_Widget, 0, 0, 1, 3)
        #########################   GUITAR CONNECTIONS   ######################
        self.GuitarE_pushbutton.clicked.connect(lambda: self.SetIndex(0))
        self.GuitarE_pushbutton.clicked.connect(self.PlayGuitarNote)
        self.GuitarA_pushbutton.clicked.connect(lambda: self.SetIndex(1))
        self.GuitarA_pushbutton.clicked.connect(self.PlayGuitarNote)
        self.GuitarD_pushButton.clicked.connect(lambda: self.SetIndex(2))
        self.GuitarD_pushButton.clicked.connect(self.PlayGuitarNote)
        self.GuitarG_pushButton.clicked.connect(lambda: self.SetIndex(4))
        self.GuitarG_pushButton.clicked.connect(self.PlayGuitarNote)
        self.GuitarB_pushbutton.clicked.connect(lambda: self.SetIndex(3))
        self.GuitarB_pushbutton.clicked.connect(self.PlayGuitarNote)
        #########################   PIANO CONNECTIONS   #######################
        self.C2_pushbutton.clicked.connect(lambda: self.SetIndex(0))
        self.C2_pushbutton.clicked.connect(self.PlayPianoNote)
        self.CHash2_pushbutton.clicked.connect(lambda: self.SetIndex(1))
        self.CHash2_pushbutton.clicked.connect(self.PlayPianoNote)
        self.D2_pushbutton.clicked.connect(lambda: self.SetIndex(2))
        self.D2_pushbutton.clicked.connect(self.PlayPianoNote)
        self.DHash2_pushbutton.clicked.connect(lambda: self.SetIndex(3))
        self.DHash2_pushbutton.clicked.connect(self.PlayPianoNote)
        self.E2_pushbutton.clicked.connect(lambda: self.SetIndex(4))
        self.E2_pushbutton.clicked.connect(self.PlayPianoNote)
        self.F2_pushbutton.clicked.connect(lambda: self.SetIndex(5))
        self.F2_pushbutton.clicked.connect(self.PlayPianoNote)
        self.FHash2_pushButton.clicked.connect(lambda: self.SetIndex(6))
        self.FHash2_pushButton.clicked.connect(self.PlayPianoNote)
        self.G2_pushbutton.clicked.connect(lambda: self.SetIndex(7))
        self.G2_pushbutton.clicked.connect(self.PlayPianoNote)
        self.GHash2_pushButton.clicked.connect(lambda: self.SetIndex(8))
        self.GHash2_pushButton.clicked.connect(self.PlayPianoNote)
        self.A2_pushbutton.clicked.connect(lambda: self.SetIndex(9))
        self.A2_pushbutton.clicked.connect(self.PlayPianoNote)
        self.AHash2_pushButton.clicked.connect(lambda: self.SetIndex(10))
        self.AHash2_pushButton.clicked.connect(self.PlayPianoNote)
        self.B2_pushbutton.clicked.connect(lambda: self.SetIndex(11))
        self.B2_pushbutton.clicked.connect(self.PlayPianoNote)
        self.C3_pushbutton.clicked.connect(lambda: self.SetIndex(12))
        self.C3_pushbutton.clicked.connect(self.PlayPianoNote)
        self.CHash3_pushButton.clicked.connect(lambda: self.SetIndex(13))
        self.CHash3_pushButton.clicked.connect(self.PlayPianoNote)
        self.D3_pushbutton.clicked.connect(lambda: self.SetIndex(14))
        self.D3_pushbutton.clicked.connect(self.PlayPianoNote)
        self.DHash3_pushButton.clicked.connect(lambda: self.SetIndex(15))
        self.DHash3_pushButton.clicked.connect(self.PlayPianoNote)
        self.E3_pushbutton.clicked.connect(lambda: self.SetIndex(16))
        self.E3_pushbutton.clicked.connect(self.PlayPianoNote)
        ########################## Synth Connections ############################
        self.pushButton.clicked.connect(self.Synthesizer)
        ########################## Bongo Connections ############################
        self.Drums_pushbutton1.clicked.connect(lambda: self.BongoPlayer(0))
        self.Drums_pushButton2.clicked.connect(lambda: self.BongoPlayer(1))
        ########################## EQ Connections ############################
        self.Browse_pushbutton.clicked.connect(self.BrowseFiles)
        self.Play_pushButton.clicked.connect(self.Play)
        self.Pause_pushButton.clicked.connect(self.Pause)
        self.Stop_pushButton.clicked.connect(self.Stop)
        devices = AudioUtilities.GetSpeakers()
        interface = devices.Activate(IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
        volume = cast(interface, POINTER(IAudioEndpointVolume))
        currentVolume = round(volume.GetMasterVolumeLevelScalar()*100)
        self.Volume_horizontalSlider.setValue(currentVolume)
        self.Volume_horizontalSlider.valueChanged.connect(self.ChangeSystemVolume)
        self.signal=np.arange(1,10,1)
       
        self.new_sig=np.array([5])
        self.frequency_interval=1
        self.frequencies=np.array([5])
        self.signal_rfft_Coeff_abs=np.array([5])
        self.total_ts_sec=0
        self.samplerate=44100
        self.data=()
        self.signal_after_gain_1 = np.array([])
        self.signal_after_gain = np.array([])
        self.signal_output_1 = np.array([])
        self.gain_sliders(self.Drums_horizontalSlider)
        self.Drums_horizontalSlider.valueChanged.connect(self.Equalizer(10,250,self.Drums_horizontalSlider.value())) 
        self.gain_sliders(self.Piano_horizontalSlider)
        self.Piano_horizontalSlider.valueChanged.connect(self.Equalizer(250,1290,self.Piano_horizontalSlider.value())) 
        self.gain_sliders(self.Guitar_horizontalSlider)
        self.Guitar_horizontalSlider.valueChanged.connect(self.Equalizer(1290,5190,self.Guitar_horizontalSlider.value()))
        self.int=0
        self.scaling_factor= 4410
        self.scaling_factor_i= 0
        self.counter = 0
        self.zoom = 1
        self.fin = 700
        self.size=0
        self.paused=False
        
    def Spectrogram(self):
        self.Spectrogram_widget.clear()
        ################## DATA NEEDS REVISION #################
        ################## THIS IS NOT FINAL   #################
        # it doesn't look like a normal spectrogram khales
        f, t, spectrogram = scipy.signal.spectrogram(y_axis_final, self.samplerate)
        p1 = self.Spectrogram_widget.addPlot()
        img = pyqtgraph.ImageItem()
        p1.addItem(img)
        hist = pyqtgraph.HistogramLUTItem()
        hist.setImageItem(img)
        ################## MAGMA COLOR PALETTE #################
        hist.gradient.restoreState({'mode': 'rgb',
            'ticks': [(0.5, (203,71,120, 255)),
                    (1.0, (241,245,36, 255)),
                    (0.0, (27,23,141, 255))]})
        self.Spectrogram_widget.addItem(hist)
        hist.setLevels(np.min(spectrogram), np.max(spectrogram))
        img.setImage(spectrogram)
        # SETTING SCALE AND LIMITS
        img.scale(t[-1]/np.size(spectrogram, axis=1), f[-1]/np.size(spectrogram, axis=0))
        p1.setLimits(xMin=0, xMax=t[-1], yMin=0, yMax=f[-1])
        # SETTING LABELS
        p1.setLabel('bottom', "Time", units='s')
        p1.setLabel('left', "Frequency", units='Hz')


    def SetIndex(self, Gindex):
        self.NoteIndex = Gindex

    def PlayGuitarNote(self):
        LetRing = self.LetRingCheckBox.isChecked()
        global NoteLength
        if LetRing:
            NoteLength = 1
        else:
            NoteLength = 4
        CurrentTuning = self.Tunings[self.TuningCombo.currentIndex()]
        CurrentNote = ((CurrentTuning[self.NoteIndex],NoteLength),)
        guitar.make_wav(CurrentNote, fn = r"CurrentNote.wav")
        filename = r'CurrentNote.wav'
        data, fs = sf.read(filename, dtype='float32')  
        sd.play(data, fs)
    
    def PlayPianoNote(self):
        SustainOn = self.PianoSustain.isChecked()
        global NoteLength
        if SustainOn:
            NoteLength = 1
        else:
            NoteLength = 4
        PianoType=self.PianoTypeCombo.currentIndex()
        CurrentNote = ((self.pianonotenames[self.NoteIndex],NoteLength),)
        if PianoType == 0:
            epiano.make_wav(CurrentNote, fn = r"CurrentNote.wav")
        elif PianoType == 1:
            grandpiano.make_wav(CurrentNote, fn = r"CurrentNote.wav")
        else:
            toypiano.make_wav(CurrentNote, fn = r"CurrentNote.wav")
        filename = r'CurrentNote.wav'
        data, fs = sf.read(filename, dtype='float32')  
        sd.play(data, fs)

    def Synthesizer(self):
        noteindex = self.Notes_comboBox.currentIndex()
        octaveindex = self.comboBox_2.currentIndex()
        resultantfrq = self.notefreqs[noteindex]*self.octavemultiplier[octaveindex]
        #p = pyaudio.PyAudio()
        volume = 0.5  
        fs = 44100       
        duration = self.horizontalSlider.value()   
        global samples
        samples=[]
        if self.sine.isChecked() == True:
            samples = (np.sin(2*np.pi*np.arange(fs*duration)*resultantfrq/fs)).astype(np.float32)
        else:
            samples = (self.signal.square(2 * np.pi * np.arange(fs*duration)*resultantfrq/fs)).astype(np.float32)
        # stream = p.open(format=pyaudio.paFloat32,channels=1,rate=fs,output=True)
        # stream.write(volume*samples)
        # stream.stop_stream()
        # stream.close()
        # p.terminate()
    
    def BongoPlayer(self, index):
        global bongodata
        global bongofs
        if index == 0:
            bongodata, bongofs = sf.read(self.bongo1, dtype='float32')  
        else:
            bongodata, bongofs = sf.read(self.bongo2, dtype='float32')
        sd.play(bongodata, bongofs)
    
    def Equalizer(self,low, high, gain):    
        Num= len(self.signal)
        self.signal_rfft_Coeff_abs = np.abs(np.fft.rfft(self.signal))
        self.frequencies = np.fft.rfftfreq(Num, 1 / self.samplerate)
        self.frequency_interval = len(self.frequencies) / (self.samplerate / 2)
        temp=0
        for f in self.frequencies:
            if low < f < high:
                temp=int(self.frequency_interval * f)
                self.signal_rfft_Coeff_abs[temp] = self.signal_rfft_Coeff_abs[temp] * gain
            else:
                pass
        print(self.new_sig)
        print(np.fft.irfft(self.signal_rfft_Coeff_abs))
        #self.new_sig = np.fft.irfft(self.signal_rfft_Coeff_abs[0])

        self.update_plot()

    def gain_sliders(self , Slider ) :
        
        Slider.setSingleStep(1)
        Slider.setValue(1)
        Slider.setMinimum(0)
        Slider.setMaximum(10)
        return Slider.value()

    def BrowseFiles(self):
        
        global file_name
        file_name=QFileDialog.getOpenFileName(None, str("Browse Files"), None, str("Audio Files (*.wav)"))
        
        global wave_object
        wave_object = sa.WaveObject.from_wave_file(file_name[0])
        raw = wave.open(file_name[0])
        self.signal = raw.readframes(-1)
        self.signal = np.frombuffer(self.signal, dtype ="int16")
        self.frame_rate = raw.getframerate()
        print(self.frame_rate)
        time = np.linspace( 0,len(self.signal) / self.frame_rate,num = len(self.signal))
        global x_axis_final
        global y_axis_final
        x_axis=np.array(time)
        x_axis=x_axis.flatten()
        x_axis_final=np.arange(1,len(x_axis),1)
        y_axis=np.array(self.signal)
        y_axis_final=y_axis.flatten()
        self.paused= False
        self.isplayed=False
        self.Play()
       
    def update_plot(self):  
        self.MainGraph_widget.setYRange(np.min(self.signal),np.max(self.signal))
        if self.counter == 0 :
            self.MainGraph_widget.setXRange(0, self.scaling_factor)
        elif self.counter >= 10000:
            self.MainGraph_widget.setXRange(self.scaling_factor_i, self.scaling_factor)
            self.scaling_factor = self.scaling_factor + 4410 
            self.scaling_factor_i = self.scaling_factor_i + 4410
        elif self.size > 0:
            self.MainGraph_widget.setXRange((self.int + self.size) , (self.fin +self.size))
        self.plt = self.MainGraph_widget.plot(x_axis_final[0:self.counter], y_axis_final[0:self.counter], pen=(255,140,0))
        self.counter = self.counter + 4410
        if self.counter > np.max(x_axis_final):
            self.timer.stop()
            self.counter= 0
    
    def Initialize(self):
        self.int=0
        self.scaling_factor= 4410
        self.scaling_factor_i= 0
        self.counter = 0
        self.zoom = 1
        self.fin = 700
        self.size=0
        self.paused=False

    def Pause(self):
        self.timer.stop()
        play_object.pause()
        self.paused=True
        self.isplayed=False

    def Play(self):
        global play_object
        if self.isplayed==True:
            return
        else:
            if self.paused==True:
                play_object.resume()
                self.timer.start()
                self.isplayed=True
                self.paused=False
            else:
                self.Initialize()
                self.isplayed=True
                self.MainGraph_widget.clear()
                self.update_plot()
                self.timer.setInterval(100)
                self.timer.timeout.connect(self.update_plot)
                self.timer.start()
                play_object = wave_object.play()
                self.Spectrogram()

    def Stop(self):
        self.timer.stop()
        self.MainGraph_widget.clear()
        play_object.stop()
        self.paused=False
        self.isplayed=False
 
    def ChangeSystemVolume(self):
        Slider = int(self.Volume_horizontalSlider.value())
        devices2 = AudioUtilities.GetSpeakers()
        interface2 = devices2.Activate(IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
        volume2 = cast(interface2, POINTER(IAudioEndpointVolume))
        volume2.SetMasterVolumeLevel(self.volumearray[Slider], None)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Virtual Instruments and Equalizer"))
        MainWindow.setWindowIcon(QtGui.QIcon('orange-piano-icon.png'))
        self.Spectrogram_groupBox.setTitle(_translate("MainWindow", "Spectrogram"))
        self.Frequency_groupBox.setTitle(_translate("MainWindow", "Frequency Range"))
        self.MainGraph_groupBox.setTitle(_translate("MainWindow", "Music File Graph"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Controls"))
        self.Browse_pushbutton.setText(_translate("MainWindow", "Browse"))
        self.Play_pushButton.setText(_translate("MainWindow", "Play"))
        self.Stop_pushButton.setText(_translate("MainWindow", "Stop"))
        self.Pause_pushButton.setText(_translate("MainWindow", "Pause"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Music), _translate("MainWindow", "Music"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.widget), _translate("MainWindow", "Bongos"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_2), _translate("MainWindow", "Piano"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_3), _translate("MainWindow", "Guitar"))
        self.Notes_comboBox.setItemText(0, _translate("MainWindow", "C"))
        self.Notes_comboBox.setItemText(1, _translate("MainWindow", "C#"))
        self.Notes_comboBox.setItemText(2, _translate("MainWindow", "D"))
        self.Notes_comboBox.setItemText(3, _translate("MainWindow", "D#"))
        self.Notes_comboBox.setItemText(4, _translate("MainWindow", "E"))
        self.Notes_comboBox.setItemText(5, _translate("MainWindow", "F"))
        self.Notes_comboBox.setItemText(6, _translate("MainWindow", "F#"))
        self.Notes_comboBox.setItemText(7, _translate("MainWindow", "G"))
        self.Notes_comboBox.setItemText(8, _translate("MainWindow", "G#"))
        self.Notes_comboBox.setItemText(9, _translate("MainWindow", "A"))
        self.Notes_comboBox.setItemText(10, _translate("MainWindow", "A#"))
        self.Notes_comboBox.setItemText(11, _translate("MainWindow", "B"))
        self.PianoTypeCombo.setItemText(0, _translate("MainWindow", "Electric Piano"))
        self.PianoTypeCombo.setItemText(1, _translate("MainWindow", "Grand Piano"))
        self.PianoTypeCombo.setItemText(2, _translate("MainWindow", "Toy Piano"))
        self.comboBox_2.setItemText(0, _translate("MainWindow", "3rd Octave"))
        self.comboBox_2.setItemText(1, _translate("MainWindow", "4th Octave"))
        self.comboBox_2.setItemText(2, _translate("MainWindow", "5th Octave"))
        self.TuningCombo.setItemText(0, _translate("MainWindow", "Standard"))
        self.TuningCombo.setItemText(1, _translate("MainWindow", "Drop D"))
        self.TuningCombo.setItemText(2, _translate("MainWindow", "G Blues"))
        self.pushButton.setText(_translate("MainWindow", "Generate"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab), _translate("MainWindow", "Synthesizer"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.instruments), _translate("MainWindow", "Instruments"))
from pyqtgraph import PlotWidget
import logo_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
